{"version":3,"sources":["webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/perfect-scrollbar/css/perfect-scrollbar.css","webpack:///$stdin","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/filepond/dist/filepond.min.css","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/loaders.css/src/animations/line-scale.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/loaders.css/src/_mixins.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/loaders.css/src/animations/line-scale-pulse-out.scss","webpack:///./src/styles/_preloader.scss","webpack:///./src/styles/_base.scss","webpack:///./src/styles/_global.scss","webpack:///./src/_app-theme.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/_theming.scss","webpack:///./src/styles.scss","webpack:///./src/styles/_svg-theme.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/libs/home/src/lib/components/footer/footer.component.scss-theme.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/libs/home/src/lib/containers/landing/landing.component.scss-theme.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/libs/home/src/lib/components/header/header.component.scss-theme.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/libs/home/src/lib/containers/about/about.component.scss-theme.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/libs/breadcrumbs/src/lib/breadcrumbs.component-theme.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/toolbar.component.scss-theme.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/libs/sidenav/src/lib/sidenav.component.scss-theme.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/libs/chat-box/src/lib/chat-box.component.scss-theme.scss","webpack:////Developer/Work/SPA/ngx-starter-kit/libs/grid/src/lib/containers/accounts-grid-list/accounts-grid-list.component.scss-theme.scss","webpack:///./src/styles/_global.scss-theme.scss"],"names":[],"mappings":"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AmBI,sBAIJ,gEACE,cAGF,+DACE,cAGF,6DACE,cAwBF,2CACE,sBA2BF,qBACE,sBADF,4BAII,cAOJ,wJAIE,mBAGF,0FAEE,mBAGF,oFAEE,mBAGF,0HAGI,mBA4tGF,kBAx0IF,iCVitB8C,CUjtB9C,uBVitBmF,CUjtBnF,wBAw0IE,kBAx0IF,wCVmtB+C,CUntB/C,2BVmtBoF,CUntBpF,4BAw0IE,kBAx0IF,wCVqtB+C,CUrtB/C,2BVqtBoF,CUrtBpF,4BAw0IE,kBAx0IF,wCVutB+C,CUvtB/C,2BVutBoF,CUvtBpF,4BAw0IE,kBAx0IF,wCVytB+C,CUztB/C,2BVytBoF,CUztBpF,6BAw0IE,kBAx0IF,wCV2tB+C,CU3tB/C,2BV2tBoF,CU3tBpF,6BAw0IE,kBAx0IF,wCV6tB+C,CU7tB/C,4BV6tBqF,CU7tBrF,6BAw0IE,kBAx0IF,wCV+tB+C,CU/tB/C,8BV+tBqF,CU/tBrF,+BAw0IE,kBAx0IF,wCViuB+C,CUjuB/C,8BViuBqF,CUjuBrF,+BAw0IE,kBAx0IF,wCVmuB+C,CUnuB/C,8BVmuBqF,CUnuBrF,+BAw0IE,mBAx0IF,wCVquB+C,CUruB/C,+BVquBsF,CUruBtF,+BAw0IE,mBAx0IF,wCVuuB+C,CUvuB/C,+BVuuBsF,CUvuBtF,+BAw0IE,mBAx0IF,wCVyuB+C,CUzuB/C,+BVyuBsF,CUzuBtF,+BAw0IE,mBAx0IF,wCV2uB+C,CU3uB/C,+BV2uBsF,CU3uBtF,+BAw0IE,mBAx0IF,wCV6uB+C,CU7uB/C,+BV6uBsF,CU7uBtF,+BAw0IE,mBAx0IF,wCV+uB+C,CU/uB/C,+BV+uBsF,CU/uBtF,+BAw0IE,mBAx0IF,yCVivBgD,CUjvBhD,+BVivBuF,CUjvBvF,+BAw0IE,mBAx0IF,yCVmvBgD,CUnvBhD,+BVmvBuF,CUnvBvF,+BAw0IE,mBAx0IF,yCVqvBgD,CUrvBhD,+BVqvBuF,CUrvBvF,+BAw0IE,mBAx0IF,yCVuvBgD,CUvvBhD,+BVuvBuF,CUvvBvF,+BAw0IE,mBAx0IF,0CVyvBiD,CUzvBjD,+BVyvBwF,CUzvBxF,+BAw0IE,mBAx0IF,0CV2vBiD,CU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M,cCz+CN,4MDo/CI,gBCp/CJ,oHDy/CI,mBCz/CJ,8GD8/CI,mBC9/CJ,oJDogDM,mBCpgDN,+BDwZE,iCV01D8C,CU11D9C,uBV01DmF,CU11DnF,wBCxZF,+BDwZE,wCV41D+C,CU51D/C,2BV41DoF,CU51DpF,4BCxZF,+BDwZE,wCV81D+C,CU91D/C,2BV81DoF,CU91DpF,4BCxZF,+BDwZE,wCVg2D+C,CUh2D/C,2BVg2DoF,CUh2DpF,4BCxZF,+BDwZE,wCVk2D+C,CUl2D/C,2BVk2DoF,CUl2DpF,6BCxZF,+BDwZE,wCVo2D+C,CUp2D/C,2BVo2DoF,CUp2DpF,6BCxZF,+BDwZE,wCVs2D+C,CUt2D/C,4BVs2DqF,CUt2DrF,6BCxZF,+BDwZE,wCVw2D+C,CUx2D/C,8BVw2DqF,CUx2DrF,+BCxZF,+BDwZE,wCV02D+C,CU12D/C,8BV02DqF,CU12DrF,+BCxZF,+BDwZE,wCV42D+C,CU52D/C,8BV42DqF,CU52DrF,+BCxZF,gCDwZE,wCV82D+C,CU92D/C,+BV82DsF,CU92DtF,+BCxZF,gCDwZE,wCVg3D+C,CUh3D/C,+BVg3DsF,CUh3DtF,+BCxZF,gCDwZE,wCVk3D+C,CUl3D/C,+BVk3DsF,CUl3DtF,+BCxZF,gCDwZE,wCVo3D+C,CUp3D/C,+BVo3DsF,CUp3DtF,+BCxZF,gCDwZE,wCVs3D+C,CUt3D/C,+BVs3DsF,CUt3DtF,+BCxZF,gCDwZE,wCVw3D+C,CUx3D/C,+BVw3DsF,CUx3DtF,+BCxZF,gCDwZE,yCV03DgD,CU13DhD,+BV03DuF,CU13DvF,+BCxZF,gCDwZE,yCV43DgD,CU53DhD,+BV43DuF,CU53DvF,+BCxZF,gCDwZE,yCV83DgD,CU93DhD,+BV83DuF,CU93DvF,+BCxZF,gCDwZE,yCVg4DgD,CUh4DhD,+BVg4DuF,CUh4DvF,+BCxZF,gCDwZE,0CVk4DiD,CUl4DjD,+BVk4DwF,CUl4DxF,+BCxZF,gCDwZE,0CVo4DiD,CUp4DjD,+BVo4DwF,CUp4DxF,+BCxZF,gCDwZE,0CVs4DiD,CUt4DjD,+BVs4DwF,CUt4DxF,+BCxZF,gCDwZE,0CVw4DiD,CUx4DjD,+BVw4DwF,CUx4DxF,+BCxZF,gCDwZE,0CV04DiD,CU14DjD,+BV04DwF,CU14DxF,+BCxZF,iED4uJI,yBACA,WAKA,yBACE,aCnvJN,qCDgrDI,mBACA,WCjrDJ,mEDwZE,wCVo5DiD,CUp5DjD,2BVo5DsF,CUp5DtF,6BCxZF,2FDyrDM,mBCzrDN,qHD4rDQ,WC5rDR,kDDizDM,gBACA,sBClzDN,gDDwzDM,WACA,mBCzzDN,wBD8zDI,kBC9zDJ,kDDm0DM,aCn0DN,oDDg1DM,mBACA,2BCj1DN,gCDsyDI,sBACA,mBA+CA,kBACA,kBACA,qBACA,kBACA,sHVkfqC,CUlfrC,kCACA,gDACA,gBACA,mBACA,uBACA,oBC/1DJ,iDDs2DI,sCCt2DJ,iDDstDI,WACA,YACA,iBCxtDJ,iED6tDM,SC7tDN,iEDmuDM,YCnuDN,kEDyuDM,WCkwBN,4ED5vBM,UACA,YChvDN,iEDsvDM,YC4vBN,2EDtvBM,WACA,WC7vDN,oFDowDQ,UCqvBR,8FD/uBQ,UACA,WC3wDR,mFDixDQ,WC+uBR,6FDzuBQ,WACA,UCxxDR,kDDstDI,WACA,YACA,iBCxtDJ,kED6tDM,UC7tDN,kEDmuDM,aCnuDN,mEDyuDM,WCyyBN,6EDnyBM,UACA,YChvDN,kEDsvDM,YCmyBN,4ED7xBM,WACA,WC7vDN,qFDowDQ,WC4xBR,+FDtxBQ,UACA,YC3wDR,oFDixDQ,YCsxBR,8FDhxBQ,WACA,WCxxDR,iDDstDI,WACA,YACA,iBCxtDJ,iED6tDM,UC7tDN,iEDmuDM,aCnuDN,kEDyuDM,WCg1BN,4ED10BM,UACA,YChvDN,iEDsvDM,YC00BN,2EDp0BM,WACA,WC7vDN,oFDowDQ,WCm0BR,8FD7zBQ,UACA,YC3wDR,mFDixDQ,YC6zBR,6FDvzBQ,WACA,WCxxDR,yCDwZE,yCVmhEgD,CUnhEhD,+BVmhEuF,CUnhEvF,+BAs/CE,mBACA,WC/4DJ,wFD8+DI,cACA,eC/+DJ,4HDi9DI,cCj9DJ,yHDo9DI,WCp9DJ,mHDu9DI,cCv9DJ,slBD69DM,2BC79DN,0MDs6DI,yBCt6DJ,uMD06DI,sBC16DJ,iMD86DI,yBC96DJ,oMDk7DI,6BCl7DJ,oJDw/DM,WACA,8BCz/DN,uCD8/DI,gBC9/DJ,iDDogEI,mCCpgEJ,+GDygEI,WACA,yBC1gEJ,0TDi9DI,sBCj9DJ,owBD69DM,kEC79DN,+JDi9DI,yBCj9DJ,2JDo9DI,sBCp9DJ,mJDu9DI,oCCv9DJ,0dD47DI,gCC57DJ,mODo8DI,sCCp8DJ,2HDwZE,iCV0kE8C,CU1kE9C,uBV0kEmF,CU1kEnF,wBCxZF,8DDwZE,wCV4kE+C,CU5kE/C,2BV4kEoF,CU5kEpF,4BCxZF,qFDwZE,wCV8kE+C,CU9kE/C,8BV8kEqF,CU9kErF,+BCxZF,wEDwZE,iCVglE8C,CUhlE9C,uBVglEmF,CUhlEnF,wBCxZF,6GDwZE,wCVklE+C,CUllE/C,4BVklEqF,CUllErF,6BCxZF,2JDwZE,wCVolE+C,CUplE/C,+BVolEsF,CUplEtF,+BCxZF,iIDwZE,iCVslE8C,CUtlE9C,uBVslEmF,CUtlEnF,wBCxZF,iFDwZE,wCVylE+C,CUzlE/C,2BVylEoF,CUzlEpF,4BCxZF,2ID0kEI,gBA6DA,uCCvoEJ,gCD8kEI,2BC9kEJ,iEDilEM,uCCjlEN,oDDslEI,WACA,mBCvlEJ,qFD0lEM,sBC1lEN,gGD+lEI,4CC/lEJ,0GDmmEI,iBACA,6CCpmEJ,2HDymEM,iBACA,kBACA,2CC3mEN,wCDgnEI,yBACA,2BCjnEJ,8EDonEM,WCpnEN,yCDynEI,2BACA,sBC1nEJ,+ED6nEM,mBC7nEN,mEDioEM,yBCjoEN,uBD6pEI,mBACA,WC9pEJ,qDDwZE,wCVkoEiD,CUloEjD,2BVkoEsF,CUloEtF,4BCxZF,mEDwZE,iCVooEgD,CUpoEhD,uBVooEqF,CUpoErF,wBCxZF,gCDuqEI,2BCvqEJ,iCD0tEI,kCC1tEJ,qCD8tEI,aC9tEJ,0CDouEI,yBAnlEF,0CCjJF,0CDyuEM,uBCzuEN,qCD8uEI,yBC9uEJ,sJDmvEM,yBCnvEN,oJDuvEM,sBCvvEN,gJD2vEM,yBC3vEN,0KDmwEQ,yBCnwER,mFDywEQ,qBCzwER,wDD8wEM,2BA7nEJ,kCCjJF,oCDkxEM,WClxEN,sCD2xEM,gBC3xEN,4GDiyEM,yBCjyEN,2GDqyEM,sBCryEN,yGDyyEM,yBCzyEN,yCDi0EE,yBACA,WCl0EF,0DDq0EI,WACA,WCt0EJ,wEDwZE,wCVirEiD,CUjrEjD,2BVirEsF,CUjrEtF,4BCxZF,wFDs2EQ,YCt2ER,2DD22EM,WC32EN,gDD+2EM,gBC/2EN,uEDi0EE,yBACA,sBCl0EF,wFDq0EI,sBACA,WCt0EJ,2FD80EI,0BC90EJ,oEDi0EE,yBACA,WCl0EF,qFDq0EI,WACA,WCt0EJ,wFD80EI,gCC90EJ,sEDi0EE,sBACA,sBCl0EF,uFDq0EI,sBACA,WCt0EJ,0FD80EI,0BC90EJ,wBDu5EI,mBCv5EJ,yRD85EI,mBC95EJ,sKDm6EI,0CCn6EJ,8BDu6EI,2BCv6EJ,qDD26EI,WC36EJ,iCD+9EI,sBC/9EJ,sKDu+EI,WCv+EJ,wCD2+EI,2BC3+EJ,uDD++EI,iCC/+EJ,sCDm/EI,2BCn/EJ,6CDu/EI,WACA,yBCx/EJ,0GD4/EI,2BC5/EJ,wYDmgFM,uCCngFN,uED0gFI,kCC1gFJ,mGD8gFI,kCC9gFJ,yCD48EI,yBACA,sBC78EJ,qEDi9EI,qCCj9EJ,iEDq9EI,2CCr9EJ,qCDwZE,wCV+vE+C,CU/vE/C,2BV+vEoF,CU/vEpF,6BA6nEE,yBACA,WCthFJ,4ED48EI,sBACA,sBC78EJ,wGDi9EI,sCCj9EJ,oGDq9EI,2CCr9EJ,0ED48EI,yBACA,WC78EJ,sGDi9EI,oCCj9EJ,kGDq9EI,gCCr9EJ,2CDwZE,iCVixE8C,CUjxE9C,uBVixEmF,CUjxEnF,wBCxZF,2CDsiFI,cCtiFJ,sDDyiFM,WCziFN,oDD6iFM,cC7iFN,mCDwZE,0CVyxEiD,CUzxEjD,+BVyxEwF,CUzxExF,+BA+rEE,mBACA,WCxlFJ,0BD2wJI,uCC3wJJ,mCD+wJI,yCC/wJJ,kCD6mFI,mBACA,WC9mFJ,gEDwZE,wCVoyEiD,CUpyEjD,2BVoyEsF,CUpyEtF,4BCxZF,6BDknFI,uCClnFJ,gXD0nFQ,iCAON,oBCjoFF,iHDooFM,oBCpoFN,+CDyoFI,WCzoFJ,kGD8oFI,2BC9oFJ,6DDkpFI,2BClpFJ,oMDspFM,cCtpFN,0DDi7II,2BCj7IJ,+DDy7II,cCz7IJ,0ED47IM,WC57IN,wEDg8IM,cCh8IN,0DDq8II,WCr8IJ,oCDy8II,sBCz8IJ,gED88IM,yBC98IN,2EDi9IQ,sBCj9IR,yEDq9IQ,yBCr9IR,0HD49IM,cC59IN,qIDg+IM,WCh+IN,4YDo+IM,cCp+IN,iKDu/IM,yBCv/IN,wBD4/II,cC5/IJ,8HDgmIM,2BChmIN,yEDwmIM,sCCxmIN,iGD+wFE,yGACA,yBACA,2BCjxFF,2EDg5IM,sCCh5IN,mGD+wFE,yGACA,yBACA,2BCjxFF,kED6/HM,sCC7/HN,0FDigIM,uCCjgIN,+EDqgIM,sCCrgIN,2FD0gIQ,2BC1gIR,uGD8gIQ,6BC9gIR,wEDsxIM,2BCtxIN,8ED0xIM,WC1xIN,0FD+xIQ,cC/xIR,qGDmyIQ,WCnyIR,+NDuyIQ,cCvyIR,8FDozIQ,2BCpzIR,gGDwzIQ,4BCxzIR,mCDwvFM,cCxvFN,kCD4vFM,WC5vFN,gCDgwFM,cChwFN,iFDi1FI,2BCj1FJ,kJDs1FI,2BCt1FJ,gCD01FI,oBC11FJ,uDD61FM,2BC71FN,6CD61FM,2BC71FN,kDD61FM,2BC71FN,2DD61FM,2BC71FN,sDD61FM,2BC71FN,uCDu2FQ,sBCv2FR,gDD22FQ,sBC32FR,4CDi3FI,iBCj3FJ,kGDs3FI,oBCt3FJ,wGD03FI,cC13FJ,wFDy5FM,WCz5FN,2CDi6FM,2BCj6FN,qCDs6FI,sBCt6FJ,wKD46FM,iCC56FN,6BD++FI,mBC/+FJ,2DDwZE,wCVw7EiD,CUx7EjD,2BVw7EsF,CUx7EtF,6BCxZF,4BDm/FI,eACA,WCp/FJ,mFDw/FQ,2BCx/FR,kGD+/FI,WC//FJ,2ODugGM,iCCvgGN,4BDgiGI,mBChiGJ,sFDqiGI,2BCriGJ,4ED0iGI,0BACA,4BC3iGJ,mEDgjGI,0BChjGJ,2PDwjGM,kCCxjGN,0CDilGI,aCjlGJ,sCDqlGI,yBCrlGJ,2CDylGI,yBCzlGJ,uED8lGM,aC9lGN,mEDkmGM,yBClmGN,wEDsmGM,sBCtmGN,qED4mGM,aC5mGN,iEDgnGM,yBChnGN,sEDonGM,yBCpnGN,2EDuoGM,eCvoGN,iGD2oGM,YC3oGN,6FD+oGM,eC/oGN,qCD+qGI,kCC/qGJ,qFD4pGI,qBC5pGJ,+VDmqGI,yBCnqGJ,oFD4pGI,kBC5pGJ,2VDmqGI,sBCnqGJ,kFD4pGI,qBC5pGJ,mVDmqGI,yBCnqGJ,sKDqsGQ,kCCrsGR,kKD0sGQ,sCC1sGR,2ED8sGQ,2BC9sGR,mDDqtGM,sBCrtGN,+BD+uGI,WC/uGJ,yFDmvGI,2BCnvGJ,+BD2vGI,2BC3vGJ,+BD+vGI,mBC/vGJ,6DDwZE,wCV2hFiD,CU3hFjD,2BV2hFsF,CU3hFtF,6BCxZF,kFDmwGM,iCCnwGN,uED0wGQ,cC1wGR,sED8wGQ,WC9wGR,kJDkxGQ,cClxGR,+ED2xGM,2BC3xGN,mCDm0GI,yBACA,WCp0GJ,yBDw0GI,yBACA,WCz0GJ,yCD40GM,yBC50GN,+CDwZE,yCVijFkD,CUjjFlD,+BVijFyF,CUjjFzF,+BCxZF,8BDu1GI,6CCv1GJ,qFD01GM,4CACA,kBC31GN,uDDo2GM,iBACA,6CCr2GN,mDD02GI,sCC12GJ,mEDw3GM,sBCx3GN,iED83GM,uCC93GN,+DDo4GM,sBCp4GN,+EDw3GM,yBCx3GN,6ED83GM,sCC93GN,2EDo4GM,yBCp4GN,4EDw3GM,yBCx3GN,0ED83GM,qCC93GN,wEDo4GM,yBCp4GN,qED26GM,sBC36GN,qCDwZE,wCVolF+C,CUplF/C,2BVolFoF,CUplFpF,4BAyhGE,yBCj7GJ,mCDq7GI,sCCr7GJ,0CDi+GI,sCCj+GJ,+IDu8GI,yBCv8GJ,uDD28GI,sBC38GJ,4IDu8GI,sBCv8GJ,sDD28GI,sBC38GJ,sIDu8GI,yBCv8GJ,oDD28GI,WC38GJ,oCDi/GI,sCCj/GJ,oWDu/GM,sCCv/GN,0DD2gHM,uCC3gHN,8KDihHQ,sBCjhHR,sMDuhHU,sCCvhHV,0FD8hHQ,kCACA,6BC/hHR,sMDqiHU,kCCriHV,8ODyiHU,kCCziHV,8DDgjHI,kCChjHJ,sDDojHI,6HAIA,kICxjHJ,oDD6jHI,8HC7jHJ,yID0lHM,uCAMF,oBChmHJ,oCDkmHQ,gBClmHR,+FD0mHM,2BC1mHN,6CDgnHM,sCACA,sBCjnHN,sKDunHM,yBACA,sBCxnHN,yDD4nHM,6BACA,cC7nHN,oEDioHM,WCjoHN,mEDqoHM,cCroHN,wED0oHI,yBC1oHJ,gDD8oHI,wCC9oHJ,iJDopHI,uCCppHJ,oCDgsHI,cChsHJ,2DDotHI,8CCptHJ,yHD0tHM,2CACA,mBC3tHN,uDDguHI,WChuHJ,yFDmuHM,2BCnuHN,gDDwuHI,kBCxuHJ,oFD4uHI,kCC5uHJ,0HDkvHI,mBACA,gBCnvHJ,wxBDgyHQ,sCChyHR,4GDsxHI,yBCtxHJ,0JDsxHI,iCCtxHJ,gxBDgyHQ,sCChyHR,0GDsxHI,sBCtxHJ,sJDsxHI,iCCtxHJ,gwBDgyHQ,sCChyHR,sGDsxHI,yBCtxHJ,8IDsxHI,sBCtxHJ,g3BDgyHQ,sCChyHR,8QDyyHI,yBCzyHJ,0QD8yHI,sBC9yHJ,8UDizHM,qBCjzHN,8KDuzHI,6BCvzHJ,sPD2zHI,4BC3zHJ,gJDi0HI,iCCj0HJ,w2BDgyHQ,sCChyHR,0QDyyHI,sBCzyHJ,sQD8yHI,sBC9yHJ,0UDizHM,qBCjzHN,4KDuzHI,6BCvzHJ,oPD2zHI,4BC3zHJ,8IDi0HI,iCCj0HJ,w1BDgyHQ,sCChyHR,kQDyyHI,yBCzyHJ,8PD8yHI,WC9yHJ,kUDizHM,2BCjzHN,wKDuzHI,kBCvzHJ,gPD2zHI,kCC3zHJ,0IDi0HI,uCCj0HJ,0BDy3HI,mBACA,WC13HJ,sCDy1HE,mBACA,sBC11HF,qCDy1HE,gBACA,sBC11HF,mCDy1HE,mBACA,WC11HF,mKDi2HI,8BCj2HJ,6QDy2HI,cCz2HJ,6CD62HI,yBC72HJ,0BDw6HI,6BCx6HJ,uBDwoJI,mBCxoJJ,+DD6oJI,WC7oJJ,sCDs8HI,sBACA,mBA/iHF,wCVuzF+C,CUvzF/C,4BVuzFqF,CUvzFrF,6BCxZF,yCD68HI","file":"styles.c92b448a05b7da78fca9.css","sourcesContent":["/*\n * Container style\n */\n.ps {\n  overflow: hidden !important;\n  overflow-anchor: none;\n  -ms-overflow-style: none;\n  touch-action: auto;\n  -ms-touch-action: auto;\n}\n\n/*\n * Scrollbar rail styles\n */\n.ps__rail-x {\n  display: none;\n  opacity: 0;\n  transition: background-color .2s linear, opacity .2s linear;\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\n  height: 15px;\n  /* there must be 'bottom' or 'top' for ps__rail-x */\n  bottom: 0px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__rail-y {\n  display: none;\n  opacity: 0;\n  transition: background-color .2s linear, opacity .2s linear;\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\n  width: 15px;\n  /* there must be 'right' or 'left' for ps__rail-y */\n  right: 0;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps--active-x > .ps__rail-x,\n.ps--active-y > .ps__rail-y {\n  display: block;\n  background-color: transparent;\n}\n\n.ps:hover > .ps__rail-x,\n.ps:hover > .ps__rail-y,\n.ps--focus > .ps__rail-x,\n.ps--focus > .ps__rail-y,\n.ps--scrolling-x > .ps__rail-x,\n.ps--scrolling-y > .ps__rail-y {\n  opacity: 0.6;\n}\n\n.ps .ps__rail-x:hover,\n.ps .ps__rail-y:hover,\n.ps .ps__rail-x:focus,\n.ps .ps__rail-y:focus,\n.ps .ps__rail-x.ps--clicking,\n.ps .ps__rail-y.ps--clicking {\n  background-color: #eee;\n  opacity: 0.9;\n}\n\n/*\n * Scrollbar thumb styles\n */\n.ps__thumb-x {\n  background-color: #aaa;\n  border-radius: 6px;\n  transition: background-color .2s linear, height .2s ease-in-out;\n  -webkit-transition: background-color .2s linear, height .2s ease-in-out;\n  height: 6px;\n  /* there must be 'bottom' for ps__thumb-x */\n  bottom: 2px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__thumb-y {\n  background-color: #aaa;\n  border-radius: 6px;\n  transition: background-color .2s linear, width .2s ease-in-out;\n  -webkit-transition: background-color .2s linear, width .2s ease-in-out;\n  width: 6px;\n  /* there must be 'right' for ps__thumb-y */\n  right: 2px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__rail-x:hover > .ps__thumb-x,\n.ps__rail-x:focus > .ps__thumb-x,\n.ps__rail-x.ps--clicking .ps__thumb-x {\n  background-color: #999;\n  height: 11px;\n}\n\n.ps__rail-y:hover > .ps__thumb-y,\n.ps__rail-y:focus > .ps__thumb-y,\n.ps__rail-y.ps--clicking .ps__thumb-y {\n  background-color: #999;\n  width: 11px;\n}\n\n/* MS supports */\n@supports (-ms-overflow-style: none) {\n  .ps {\n    overflow: auto !important;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\n  .ps {\n    overflow: auto !important;\n  }\n}\n",null,"/*\n * FilePond 4.1.4\n * Licensed under MIT, https://opensource.org/licenses/MIT\n * Please visit https://pqina.nl/filepond for details.\n */\n\n/* eslint-disable */\n.filepond--assistant{position:absolute;overflow:hidden;height:1px;width:1px;padding:0;border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);white-space:nowrap}.filepond--browser.filepond--browser{position:absolute;margin:0;padding:0;left:1em;top:1.75em;width:calc(100% - 2em);opacity:0;font-size:0}.filepond--drip{position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;opacity:.1;pointer-events:none;border-radius:.5em;background:rgba(0,0,0,.01)}.filepond--drip-blob{-webkit-transform-origin:center center;transform-origin:center center;left:0;width:8em;height:8em;margin-left:-4em;margin-top:-4em;background:#292625;border-radius:50%}.filepond--drip-blob,.filepond--drop-label{position:absolute;top:0;will-change:transform,opacity}.filepond--drop-label{left:1em;right:1em;margin:0;color:#4f4f4f;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;height:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.filepond--drop-label.filepond--drop-label label{display:block;margin:0;padding:.5em}.filepond--drop-label label{cursor:default;font-size:.875em;font-weight:400;text-align:center;line-height:1.5}.filepond--label-action{text-decoration:underline;text-decoration-skip-ink:auto;-webkit-text-decoration-color:#a7a4a4;text-decoration-color:#a7a4a4;cursor:pointer}.filepond--file-action-button.filepond--file-action-button{font-size:1em;width:1.625em;height:1.625em;font-family:inherit;line-height:inherit;margin:0;padding:0;border:none;outline:none;will-change:transform,opacity}.filepond--file-action-button.filepond--file-action-button svg{width:100%;height:100%}.filepond--file-action-button.filepond--file-action-button:after{position:absolute;left:-.75em;right:-.75em;top:-.75em;bottom:-.75em;content:\"\"}.filepond--file-action-button{cursor:auto;color:#fff;border-radius:50%;background-color:rgba(0,0,0,.5);background-image:none;box-shadow:0 0 0 0 hsla(0,0%,100%,0);transition:box-shadow .25s ease-in}.filepond--file-action-button:focus,.filepond--file-action-button:hover{box-shadow:0 0 0 .125em hsla(0,0%,100%,.9)}.filepond--file-info{position:static;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex:1;flex:1;margin:0 .5em 0 0;min-width:0;will-change:transform,opacity;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.filepond--file-info *{margin:0}.filepond--file-info .filepond--file-info-main{font-size:.75em;line-height:1.2;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;width:100%}.filepond--file-info .filepond--file-info-sub{font-size:.625em;opacity:.5;transition:opacity .25s ease-in-out;white-space:nowrap}.filepond--file-info .filepond--file-info-sub:empty{display:none}.filepond--file-status{position:static;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:end;align-items:flex-end;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;margin:0;min-width:2.25em;text-align:right;will-change:transform,opacity;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.filepond--file-status *{margin:0;white-space:nowrap}.filepond--file-status .filepond--file-status-main{font-size:.75em;line-height:1.2}.filepond--file-status .filepond--file-status-sub{font-size:.625em;opacity:.5;transition:opacity .25s ease-in-out}.filepond--file-wrapper.filepond--file-wrapper{border:none;margin:0;padding:0;min-width:0;height:100%}.filepond--file-wrapper.filepond--file-wrapper>legend{position:absolute;overflow:hidden;height:1px;width:1px;padding:0;border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);white-space:nowrap}.filepond--file{position:static;display:-ms-flexbox;display:flex;height:100%;-ms-flex-align:start;align-items:flex-start;padding:.5625em;color:#fff;border-radius:.5em}.filepond--file .filepond--file-status{margin-left:auto;margin-right:2.25em}.filepond--file .filepond--processing-complete-indicator{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:3}.filepond--file .filepond--file-action-button,.filepond--file .filepond--processing-complete-indicator,.filepond--file .filepond--progress-indicator{position:absolute}.filepond--file [data-align*=left]{left:.5625em}.filepond--file [data-align*=right]{right:.5625em}.filepond--file [data-align*=center]{left:calc(50% - .8125em)}.filepond--file [data-align*=bottom]{bottom:1.125em}.filepond--file [data-align=center]{top:calc(50% - .8125em)}.filepond--file .filepond--progress-indicator{margin-top:.1875em}.filepond--file .filepond--progress-indicator[data-align*=right]{margin-right:.1875em}.filepond--file .filepond--progress-indicator[data-align*=left]{margin-left:.1875em}[data-filepond-item-state*=error] .filepond--file-info,[data-filepond-item-state*=invalid] .filepond--file-info,[data-filepond-item-state=cancelled] .filepond--file-info{margin-right:2.25em}[data-filepond-item-state=processing-complete] .filepond--action-revert-item-processing svg{-webkit-animation:fall .5s .125s linear both;animation:fall .5s .125s linear both}[data-filepond-item-state=processing-complete] .filepond--file-info-sub,[data-filepond-item-state=processing-complete] .filepond--file-status-sub{opacity:0}[data-filepond-item-state=processing-complete] .filepond--action-revert-item-processing~.filepond--file-info .filepond--file-info-sub,[data-filepond-item-state=processing-complete] .filepond--action-revert-item-processing~.filepond--file-status .filepond--file-status-sub{opacity:.5}[data-filepond-item-state*=error] .filepond--file-wrapper,[data-filepond-item-state*=error] .filepond--panel,[data-filepond-item-state*=invalid] .filepond--file-wrapper,[data-filepond-item-state*=invalid] .filepond--panel{-webkit-animation:shake .65s linear both;animation:shake .65s linear both}[data-filepond-item-state*=busy] .filepond--progress-indicator svg{-webkit-animation:spin 1s linear infinite;animation:spin 1s linear infinite}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes shake{10%,90%{-webkit-transform:translateX(-.0625em);transform:translateX(-.0625em)}20%,80%{-webkit-transform:translateX(.125em);transform:translateX(.125em)}30%,50%,70%{-webkit-transform:translateX(-.25em);transform:translateX(-.25em)}40%,60%{-webkit-transform:translateX(.25em);transform:translateX(.25em)}}@keyframes shake{10%,90%{-webkit-transform:translateX(-.0625em);transform:translateX(-.0625em)}20%,80%{-webkit-transform:translateX(.125em);transform:translateX(.125em)}30%,50%,70%{-webkit-transform:translateX(-.25em);transform:translateX(-.25em)}40%,60%{-webkit-transform:translateX(.25em);transform:translateX(.25em)}}@-webkit-keyframes fall{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}70%{opacity:1;-webkit-transform:scale(1.1);transform:scale(1.1);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}to{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}@keyframes fall{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}70%{opacity:1;-webkit-transform:scale(1.1);transform:scale(1.1);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}to{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}.filepond--hopper[data-hopper-state=drag-over]>*{pointer-events:none}.filepond--hopper[data-hopper-state=drag-over]:after{content:\"\";position:absolute;left:0;top:0;right:0;bottom:0;z-index:100}.filepond--progress-indicator{z-index:103}.filepond--file-action-button{z-index:102}.filepond--file-status{z-index:101}.filepond--file-info{z-index:100}.filepond--item{position:absolute;top:0;left:0;right:0;z-index:1;padding:0;margin:.25em;will-change:transform,opacity}.filepond--item>.filepond--panel{z-index:-1}.filepond--item>.filepond--panel .filepond--panel-bottom{box-shadow:0 .0625em .125em -.0625em rgba(0,0,0,.25)}.filepond--item-panel{background-color:#64605e}[data-filepond-item-state=processing-complete] .filepond--item-panel{background-color:#369763}[data-filepond-item-state*=error] .filepond--item-panel,[data-filepond-item-state*=invalid] .filepond--item-panel{background-color:#c44e47}.filepond--item-panel{border-radius:.5em;transition:background-color .25s}.filepond--list-scroller{position:absolute;top:0;left:0;right:0;margin:0;will-change:transform}.filepond--list-scroller[data-state=overflow]{overflow-y:scroll;overflow-x:hidden;-webkit-overflow-scrolling:touch;-webkit-mask:linear-gradient(180deg,#000 calc(100% - .5em),transparent);mask:linear-gradient(180deg,#000 calc(100% - .5em),transparent)}.filepond--list-scroller[data-state=overflow] .filepond--list{bottom:0;right:0}.filepond--list-scroller::-webkit-scrollbar{background:transparent}.filepond--list-scroller::-webkit-scrollbar:vertical{width:1em}.filepond--list-scroller::-webkit-scrollbar:horizontal{height:0}.filepond--list-scroller::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.3);border-radius:99999px;border:.3125em solid transparent;background-clip:content-box}.filepond--list.filepond--list{position:absolute;top:0;margin:0;padding:0;list-style-type:none;will-change:transform}.filepond--list{left:.75em;right:.75em}.filepond--root[data-style-panel-layout~=integrated]{width:100%;height:100%;max-width:none;margin:0}.filepond--root[data-style-panel-layout~=circle] .filepond--panel-root,.filepond--root[data-style-panel-layout~=integrated] .filepond--panel-root{border-radius:0}.filepond--root[data-style-panel-layout~=circle] .filepond--panel-root>*,.filepond--root[data-style-panel-layout~=integrated] .filepond--panel-root>*{display:none}.filepond--root[data-style-panel-layout~=circle] .filepond--drop-label,.filepond--root[data-style-panel-layout~=integrated] .filepond--drop-label{bottom:0;height:auto;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;z-index:7}.filepond--root[data-style-panel-layout~=circle] .filepond--item-panel,.filepond--root[data-style-panel-layout~=integrated] .filepond--item-panel{display:none}.filepond--root[data-style-panel-layout~=compact] .filepond--list-scroller,.filepond--root[data-style-panel-layout~=integrated] .filepond--list-scroller{overflow:hidden;height:100%;margin-top:0;margin-bottom:0}.filepond--root[data-style-panel-layout~=compact] .filepond--list,.filepond--root[data-style-panel-layout~=integrated] .filepond--list{left:0;right:0;height:100%}.filepond--root[data-style-panel-layout~=compact] .filepond--item,.filepond--root[data-style-panel-layout~=integrated] .filepond--item{margin:0}.filepond--root[data-style-panel-layout~=compact] .filepond--file-wrapper,.filepond--root[data-style-panel-layout~=integrated] .filepond--file-wrapper{height:100%}.filepond--root[data-style-panel-layout~=circle]{border-radius:99999rem;overflow:hidden}.filepond--root[data-style-panel-layout~=circle]>.filepond--panel{border-radius:inherit}.filepond--root[data-style-panel-layout~=circle] .filepond--file-info,.filepond--root[data-style-panel-layout~=circle] .filepond--file-status,.filepond--root[data-style-panel-layout~=circle]>.filepond--panel>*{display:none}.filepond--panel-root{border-radius:.5em;background-color:#f1f0ef}.filepond--panel{position:absolute;left:0;top:0;right:0;margin:0;height:100%!important;pointer-events:none}.filepond-panel:not([data-scalable=false]){height:auto!important}.filepond--panel[data-scalable=false]>div{display:none}.filepond--panel[data-scalable=true]{-webkit-transform-style:preserve-3d;transform-style:preserve-3d;background-color:transparent!important;border:none!important}.filepond--panel-bottom,.filepond--panel-center,.filepond--panel-top{position:absolute;left:0;top:0;right:0;margin:0;padding:0}.filepond--panel-bottom,.filepond--panel-top{height:.5em}.filepond--panel-top{border-bottom-left-radius:0!important;border-bottom-right-radius:0!important;border-bottom:none!important}.filepond--panel-top:after{content:\"\";position:absolute;height:2px;left:0;right:0;bottom:-1px;background-color:inherit}.filepond--panel-bottom,.filepond--panel-center{will-change:transform;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transform-origin:left top;transform-origin:left top;-webkit-transform:translate3d(0,.5em,0);transform:translate3d(0,.5em,0)}.filepond--panel-bottom{border-top-left-radius:0!important;border-top-right-radius:0!important;border-top:none!important}.filepond--panel-bottom:before{content:\"\";position:absolute;height:2px;left:0;right:0;top:-1px;background-color:inherit}.filepond--panel-center{height:100px!important;border-top:none!important;border-bottom:none!important;border-radius:0!important}.filepond--panel-center:not([style]){visibility:hidden}.filepond--progress-indicator{position:static;width:1.25em;height:1.25em;color:#fff;margin:0;pointer-events:none;will-change:transform,opacity}.filepond--progress-indicator svg{width:100%;height:100%;vertical-align:top;transform-box:fill-box}.filepond--progress-indicator path{fill:none;stroke:currentColor}.filepond--list-scroller{z-index:6}.filepond--drop-label{z-index:5}.filepond--drip{z-index:3}.filepond--root>.filepond--panel{z-index:2}.filepond--browser{z-index:1}.filepond--root{box-sizing:border-box;position:relative;margin-bottom:1em;font-size:1rem;line-height:normal;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif;font-weight:450;text-align:left;text-rendering:optimizeLegibility;direction:ltr;contain:layout style size}.filepond--root *{font-size:inherit;box-sizing:inherit;line-height:inherit}.filepond--root .filepond--drop-label{min-height:4.75em}.filepond--root .filepond--list-scroller{margin-top:1em;margin-bottom:1em}","/*\n * FilePondPluginImagePreview 4.0.3\n * Licensed under MIT, https://opensource.org/licenses/MIT\n * Please visit https://pqina.nl/filepond for details.\n */\n\n/* eslint-disable */\n.filepond--image-preview-wrapper {\n  z-index: 2;\n}\n\n.filepond--image-preview-overlay {\n  display: block;\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  min-height: 5rem;\n  max-height: 7rem;\n  margin: 0;\n  opacity: 0;\n  z-index: 2;\n  pointer-events: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.filepond--image-preview-overlay svg {\n  width: 100%;\n  height: auto;\n  color: inherit;\n  max-height: inherit;\n}\n\n.filepond--image-preview-overlay-idle {\n  mix-blend-mode: multiply;\n  color: rgba(40, 40, 40, 0.85);\n}\n\n.filepond--image-preview-overlay-success {\n  mix-blend-mode: normal;\n  color: #369763;\n}\n\n.filepond--image-preview-overlay-failure {\n  mix-blend-mode: normal;\n  color: #c44e47;\n}\n\n@supports (-webkit-marquee-repetition: infinite) and (object-fit: fill) {\n  .filepond--image-preview-overlay-idle {\n    mix-blend-mode: normal;\n  }\n}\n\n.filepond--image-preview-wrapper {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  height: 100%;\n  margin: 0;\n  border-radius: 0.45em;\n  overflow: hidden;\n  background: rgba(0, 0, 0, 0.01);\n}\n\n.filepond--image-preview {\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 1;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-align: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  pointer-events: none;\n  background: #222;\n  will-change: transform, opacity;\n}\n.filepond--image-preview[data-transparency-indicator='grid'] img,\n.filepond--image-preview[data-transparency-indicator='grid'] canvas {\n  background-color: #fff;\n  background-image: url(\"data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg' fill='%23eee'%3E%3Cpath d='M0 0 H50 V50 H0'/%3E%3Cpath d='M50 50 H100 V100 H50'/%3E%3C/svg%3E\");\n  background-size: 1.25em 1.25em;\n}\n\n.filepond--image-clip {\n  position: relative;\n  overflow: hidden;\n  margin: 0 auto;\n}\n\n.filepond--image-bitmap,\n.filepond--image-vector {\n  position: absolute;\n  left: 0;\n  top: 0;\n  will-change: transform;\n}\n\n.filepond--root[data-style-panel-layout~='integrated']\n  .filepond--image-preview-wrapper {\n  border-radius: 0;\n}\n\n.filepond--root[data-style-panel-layout~='integrated']\n  .filepond--image-preview {\n  height: 100%;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-pack: center;\n  justify-content: center;\n  -ms-flex-align: center;\n  align-items: center;\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--image-preview-wrapper {\n  border-radius: 99999rem;\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--image-preview-overlay {\n  top: auto;\n  bottom: 0;\n  -webkit-transform: scaleY(-1);\n  transform: scaleY(-1);\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--file\n  .filepond--file-action-button[data-align*='bottom']:not([data-align*='center']) {\n  margin-bottom: 0.325em;\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--file\n  [data-align*='left'] {\n  left: calc(50% - 3em);\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--file\n  [data-align*='right'] {\n  right: calc(50% - 3em);\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--progress-indicator[data-align*='bottom'][data-align*='left'],\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--progress-indicator[data-align*='bottom'][data-align*='right'] {\n  margin-bottom: calc(0.325em + 0.1875em);\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--progress-indicator[data-align*='bottom'][data-align*='center'] {\n  margin-top: 0;\n  margin-bottom: 0.1875em;\n  margin-left: 0.1875em;\n}\n","@import '../variables';\n@import '../mixins';\n@import '../functions';\n\n@keyframes line-scale {\n  0% {\n    transform: scaley(1.0);\n  }\n  50% {\n    transform: scaley(0.4);\n  }\n  100% {\n    transform: scaley(1.0);\n  }\n}\n\n@mixin line-scale($n:5) {\n  @for $i from 1 through $n {\n    > div:nth-child(#{$i}) {\n      animation: line-scale 1s delay(0.1s, $n, $i) infinite cubic-bezier(.2,.68,.18,1.08);\n    }\n  }\n}\n\n.line-scale {\n  @include line-scale();\n\n  > div {\n    @include lines();\n    @include global-animation();\n\n    display: inline-block;\n  }\n}\n","@mixin global-bg() {\n  background-color: $primary-color;\n}\n\n@mixin global-animation() {\n  animation-fill-mode: both;\n}\n\n@mixin balls() {\n  @include global-bg();\n\n  width: $ball-size;\n  height: $ball-size;\n  border-radius: 100%;\n  margin: $margin;\n}\n\n@mixin lines() {\n  @include global-bg();\n\n  width: $line-width;\n  height: $line-height;\n  border-radius: 2px;\n  margin: $margin;\n}\n","@import '../variables';\n@import '../mixins';\n@import '../functions';\n\n@keyframes line-scale-pulse-out {\n  0% {\n    transform: scaley(1.0);\n  }\n  50% {\n    transform: scaley(0.4);\n  }\n  100% {\n    transform: scaley(1.0);\n  }\n}\n\n.line-scale-pulse-out {\n\n  > div {\n    @include lines();\n    @include global-animation();\n\n    display: inline-block;\n    animation: line-scale-pulse-out 0.9s delay(0.2s, 3, 0) infinite cubic-bezier(.85,.25,.37,.85);\n\n    &:nth-child(2), &:nth-child(4) {\n      animation-delay: delay(0.2s, 3, 1) !important;\n    }\n\n    &:nth-child(1), &:nth-child(5) {\n      animation-delay: delay(0.2s, 3, 2) !important;\n    }\n\n  }\n}\n","@import 'constants';\n\n/* PRE LOADER\n-------------------------------------------------- */\n@import '~loaders.css/src/animations/line-scale';\n@import '~loaders.css/src/animations/line-scale-pulse-out';\n\n.loader {\n  //background: $auxiliary;\n  background: $loader_bg;\n  display: table;\n  height: 100%;\n  max-width: 100%;\n  position: absolute;\n  width: 100%;\n  z-index: 99999;\n\n  .loader-inner {\n    backface-visibility: hidden;\n    display: table-cell;\n    overflow: hidden;\n    text-align: center;\n    vertical-align: middle;\n  }\n}\n","@import '~@angular/material/theming';\n\n$config: mat-typography-config();\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\nbody {\n  font-family: mat-font-family($config);\n}\n",".default-button[mat-button],\n.default-button[mat-raised-button] {\n  text-transform: uppercase;\n}\n\n.default-primary-header {\n  padding-left: 20px;\n\n  h1 {\n    font-weight: 300;\n    margin: 0;\n    padding: 28px 8px;\n    font-size: 20px !important;\n  }\n}\n\ncode {\n  white-space: nowrap;\n  border-radius: 10px;\n  padding: 0 8px 1px 8px;\n}\n\n.default-markdown-pre code {\n  font-size: 100%;\n}\n\n// These styles are for controlling SVGs without using the /deep/ selector\n\n.default-component-category-list-card-image svg {\n  width: 100%;\n}\n\n.default-footer-angular-logo svg {\n  height: 50px;\n}\n\n.default-angular-logo svg {\n  height: 26px;\n  margin: 0 4px 3px 0;\n  vertical-align: middle;\n}\n\n.mylogin-no-padding-dialog .mat-dialog-container {\n  padding: 0;\n}\n","//Ref: https://github.com/angular/material.angular.io/blob/master/src/_app-theme.scss\n@import '~@angular/material/theming';\n\n@import '../../../libs/sidenav/src/lib/components/menu-item/menu-item.component.scss-theme';\n@import '../../../libs/home/src/lib/containers/landing/landing.component.scss-theme';\n@import '../../../libs/home/src/lib/components/footer/footer.component.scss-theme';\n@import '../../../libs/home/src/lib/components/header/header.component.scss-theme';\n@import '../../../libs/home/src/lib/containers/about/about.component.scss-theme';\n@import '../../../libs/breadcrumbs/src/lib/breadcrumbs.component-theme';\n@import '../../../libs/toolbar/src/lib/toolbar.component.scss-theme';\n@import '../../../libs/sidenav/src/lib/sidenav.component.scss-theme';\n@import '../../../libs/chat-box/src/lib/chat-box.component.scss-theme';\n@import '../../../libs/grid/src/lib/containers/accounts-grid-list/accounts-grid-list.component.scss-theme';\n\n@import './styles/global.scss-theme';\n@import './styles/svg-theme';\n\n//@import './styles/tables-theme';\n\n// Styles for the default app that are based on the current theme.\n@mixin custom-components-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-app-background {\n    background: mat-color($background, background);\n  }\n\n  .default-primary-header {\n    background: mat-color($primary);\n\n    h1 {\n      color: mat-color($primary, default-contrast);\n    }\n  }\n\n  @include ngx-site-svg-theme($theme);\n  //@include default-site-tables-theme($theme);\n  @include ngx-footer-component-theme($theme);\n  @include ngx-landing-component-theme($theme);\n  @include ngx-header-component-theme($theme);\n\n  @include ngx-about-component-theme($theme);\n  @include ngx-breadcrumbs-component-theme($theme);\n  @include ngx-toolbar-component-theme($theme);\n  @include ngx-sidenav-component-theme($theme);\n  @include ngx-chat-box-component-theme($theme);\n  @include ngx-accounts-grid-list-component-theme($theme);\n\n  @include ngx-global-theme($theme);\n}\n","// Import all the theming functionality.\n// We can use relative imports for imports from the cdk because we bundle everything\n// up into a single flat scss file for material.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32);\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // In high contrast mode the rgba background will become solid so we need to fall back\n      // to making it opaque using `opacity`. Note that we can't use the `cdk-high-contrast`\n      // mixin, because we can't normalize the import path to the _a11y.scss both for the\n      // source and when this file is distributed. See #10908.\n      @media screen and (-ms-high-contrast: active) {\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n@mixin cdk-high-contrast($target: active) {\n  @media (-ms-high-contrast: $target) {\n    @content;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-start;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    animation-name: cdk-text-field-autofill-end;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    height: auto !important;\n    overflow: hidden !important;\n    // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n    // measurement. We just have to account for it later and subtract it off the final result.\n    padding: 2px 0 !important;\n    box-sizing: content-box !important;\n  }\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count};\n    animation-fill-mode: both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-start,\n                    cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count};\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  @return (\n    0: '0px 0px 0px 0px #{rgba($color, $opacity * 0.2)}',\n    1: '0px 2px 1px -1px #{rgba($color, $opacity * 0.2)}',\n    2: '0px 3px 1px -2px #{rgba($color, $opacity * 0.2)}',\n    3: '0px 3px 3px -2px #{rgba($color, $opacity * 0.2)}',\n    4: '0px 2px 4px -1px #{rgba($color, $opacity * 0.2)}',\n    5: '0px 3px 5px -1px #{rgba($color, $opacity * 0.2)}',\n    6: '0px 3px 5px -1px #{rgba($color, $opacity * 0.2)}',\n    7: '0px 4px 5px -2px #{rgba($color, $opacity * 0.2)}',\n    8: '0px 5px 5px -3px #{rgba($color, $opacity * 0.2)}',\n    9: '0px 5px 6px -3px #{rgba($color, $opacity * 0.2)}',\n    10: '0px 6px 6px -3px #{rgba($color, $opacity * 0.2)}',\n    11: '0px 6px 7px -4px #{rgba($color, $opacity * 0.2)}',\n    12: '0px 7px 8px -4px #{rgba($color, $opacity * 0.2)}',\n    13: '0px 7px 8px -4px #{rgba($color, $opacity * 0.2)}',\n    14: '0px 7px 9px -4px #{rgba($color, $opacity * 0.2)}',\n    15: '0px 8px 9px -5px #{rgba($color, $opacity * 0.2)}',\n    16: '0px 8px 10px -5px #{rgba($color, $opacity * 0.2)}',\n    17: '0px 8px 11px -5px #{rgba($color, $opacity * 0.2)}',\n    18: '0px 9px 11px -5px #{rgba($color, $opacity * 0.2)}',\n    19: '0px 9px 12px -6px #{rgba($color, $opacity * 0.2)}',\n    20: '0px 10px 13px -6px #{rgba($color, $opacity * 0.2)}',\n    21: '0px 10px 13px -6px #{rgba($color, $opacity * 0.2)}',\n    22: '0px 10px 14px -6px #{rgba($color, $opacity * 0.2)}',\n    23: '0px 11px 14px -7px #{rgba($color, $opacity * 0.2)}',\n    24: '0px 11px 15px -7px #{rgba($color, $opacity * 0.2)}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  @return (\n    0: '0px 0px 0px 0px #{rgba($color, $opacity * 0.14)}',\n    1: '0px 1px 1px 0px #{rgba($color, $opacity * 0.14)}',\n    2: '0px 2px 2px 0px #{rgba($color, $opacity * 0.14)}',\n    3: '0px 3px 4px 0px #{rgba($color, $opacity * 0.14)}',\n    4: '0px 4px 5px 0px #{rgba($color, $opacity * 0.14)}',\n    5: '0px 5px 8px 0px #{rgba($color, $opacity * 0.14)}',\n    6: '0px 6px 10px 0px #{rgba($color, $opacity * 0.14)}',\n    7: '0px 7px 10px 1px #{rgba($color, $opacity * 0.14)}',\n    8: '0px 8px 10px 1px #{rgba($color, $opacity * 0.14)}',\n    9: '0px 9px 12px 1px #{rgba($color, $opacity * 0.14)}',\n    10: '0px 10px 14px 1px #{rgba($color, $opacity * 0.14)}',\n    11: '0px 11px 15px 1px #{rgba($color, $opacity * 0.14)}',\n    12: '0px 12px 17px 2px #{rgba($color, $opacity * 0.14)}',\n    13: '0px 13px 19px 2px #{rgba($color, $opacity * 0.14)}',\n    14: '0px 14px 21px 2px #{rgba($color, $opacity * 0.14)}',\n    15: '0px 15px 22px 2px #{rgba($color, $opacity * 0.14)}',\n    16: '0px 16px 24px 2px #{rgba($color, $opacity * 0.14)}',\n    17: '0px 17px 26px 2px #{rgba($color, $opacity * 0.14)}',\n    18: '0px 18px 28px 2px #{rgba($color, $opacity * 0.14)}',\n    19: '0px 19px 29px 2px #{rgba($color, $opacity * 0.14)}',\n    20: '0px 20px 31px 3px #{rgba($color, $opacity * 0.14)}',\n    21: '0px 21px 33px 3px #{rgba($color, $opacity * 0.14)}',\n    22: '0px 22px 35px 3px #{rgba($color, $opacity * 0.14)}',\n    23: '0px 23px 36px 3px #{rgba($color, $opacity * 0.14)}',\n    24: '0px 24px 38px 3px #{rgba($color, $opacity * 0.14)}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  @return (\n    0: '0px 0px 0px 0px #{rgba($color, $opacity * 0.12)}',\n    1: '0px 1px 3px 0px #{rgba($color, $opacity * 0.12)}',\n    2: '0px 1px 5px 0px #{rgba($color, $opacity * 0.12)}',\n    3: '0px 1px 8px 0px #{rgba($color, $opacity * 0.12)}',\n    4: '0px 1px 10px 0px #{rgba($color, $opacity * 0.12)}',\n    5: '0px 1px 14px 0px #{rgba($color, $opacity * 0.12)}',\n    6: '0px 1px 18px 0px #{rgba($color, $opacity * 0.12)}',\n    7: '0px 2px 16px 1px #{rgba($color, $opacity * 0.12)}',\n    8: '0px 3px 14px 2px #{rgba($color, $opacity * 0.12)}',\n    9: '0px 3px 16px 2px #{rgba($color, $opacity * 0.12)}',\n    10: '0px 4px 18px 3px #{rgba($color, $opacity * 0.12)}',\n    11: '0px 4px 20px 3px #{rgba($color, $opacity * 0.12)}',\n    12: '0px 5px 22px 4px #{rgba($color, $opacity * 0.12)}',\n    13: '0px 5px 24px 4px #{rgba($color, $opacity * 0.12)}',\n    14: '0px 5px 26px 4px #{rgba($color, $opacity * 0.12)}',\n    15: '0px 6px 28px 5px #{rgba($color, $opacity * 0.12)}',\n    16: '0px 6px 30px 5px #{rgba($color, $opacity * 0.12)}',\n    17: '0px 6px 32px 5px #{rgba($color, $opacity * 0.12)}',\n    18: '0px 7px 34px 6px #{rgba($color, $opacity * 0.12)}',\n    19: '0px 7px 36px 6px #{rgba($color, $opacity * 0.12)}',\n    20: '0px 8px 38px 7px #{rgba($color, $opacity * 0.12)}',\n    21: '0px 8px 40px 7px #{rgba($color, $opacity * 0.12)}',\n    22: '0px 8px 42px 7px #{rgba($color, $opacity * 0.12)}',\n    23: '0px 9px 44px 8px #{rgba($color, $opacity * 0.12)}',\n    24: '0px 9px 46px 8px #{rgba($color, $opacity * 0.12)}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$_mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n@mixin _mat-theme-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$_mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n@mixin _mat-theme-overridable-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map_get($mat-grey, 300),\n  app-bar:    map_get($mat-grey, 100),\n  background: map_get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map_get($mat-grey, 300),\n  selected-disabled-button: map_get($mat-grey, 400),\n  disabled-button-toggle: map_get($mat-grey, 200),\n  unselected-chip: map_get($mat-grey, 300),\n  disabled-list-option: map_get($mat-grey, 200),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map_get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map_get($mat-grey, 800),\n  dialog:     map_get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map_get($mat-grey, 900),\n  selected-disabled-button: map_get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map_get($mat-grey, 700),\n  disabled-list-option: black,\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700) {\n  $result: map_merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map_merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n  $opacity: if($opacity == null, opacity($color), $opacity);\n\n  @return rgba($color, $opacity);\n}\n\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n@function mat-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n@function mat-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast {\n      display: none;\n    }\n  }\n}\n\n/* Theme for the ripple elements.*/\n@mixin mat-ripple-theme($theme) {\n  $foreground: map_get($theme, foreground);\n  $foreground-base: map_get($foreground, base);\n\n  .mat-ripple-element {\n    background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n  }\n}\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn);\n  }\n}\n\n@mixin mat-option-typography($config) {\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-optgroup-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config) {\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n\n\n@mixin mat-pseudo-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($theme, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, accent));\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, primary));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: null) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300),\n  $display-3:     mat-typography-level(56px, 56px, 400),\n  $display-2:     mat-typography-level(45px, 48px, 400),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Adds the base typography styles, based on a config.\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n      mat-font-size($config, body-1) * 0.83,\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n      mat-font-size($config, body-1) * 0.67,\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  // Note: The spec doesn't mention letter spacing. The value comes from\n  // eyeballing it until it looked exactly like the spec examples.\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n    letter-spacing: -0.05em;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n    letter-spacing: -0.02em;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n    letter-spacing: -0.005em;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n@mixin mat-autocomplete-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-autocomplete-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n\n}\n\n@mixin mat-autocomplete-typography($config) { }\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-theme($theme) {\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $primary: map-get($theme, primary);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. We convert it into a solid\n      // color by taking the opacity from the rgba value and using the value to determine the\n      // percentage of the background to put into foreground when mixing the colors together.\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n      $badge-opacity: opacity($badge-color);\n      background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config) {\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    font-size: $mat-badge-font-size / 2;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n\n\n\n\n@mixin mat-bottom-sheet-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-bottom-sheet-container {\n    @include _mat-theme-elevation(16, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config) {\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &[disabled] .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    background-color: mat-color($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    background-color: mat-color($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    background-color: mat-color($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &[disabled] {\n    &[disabled] {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($theme, 'color', default);\n    @include _mat-button-focus-overlay-color($theme);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map_get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not([disabled]) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($theme, 'color', default-contrast);\n    @include _mat-button-theme-property($theme, 'background-color', default);\n    @include _mat-button-ripple-color($theme, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include _mat-theme-overridable-elevation(0, $theme);\n  }\n\n  .mat-raised-button {\n    @include _mat-theme-overridable-elevation(2, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(8, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include _mat-theme-overridable-elevation(6, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(12, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n}\n\n@mixin mat-button-typography($config) {\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-button-toggle-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include _mat-theme-elevation(2, $theme);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config) {\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-card-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-card {\n    @include _mat-theme-overridable-elevation(1, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config) {\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n@mixin mat-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n\n    @include cdk-high-contrast(black-on-white) {\n      // Having the one above be !important ends up overriding the browser's automatic\n      // color inversion so we need to re-invert it ourselves for black-on-white.\n      stroke: #000 !important;\n    }\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n\n    @include cdk-high-contrast {\n      opacity: 0.5;\n    }\n  }\n\n  // This one is moved down here so it can target both\n  // the theme colors and the disabled state.\n  @include cdk-high-contrast {\n    .mat-checkbox-background {\n      // Needs to be removed because it hides the checkbox outline.\n      background: none;\n    }\n  }\n\n  .mat-checkbox:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-ripple .mat-ripple-element {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config) {\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin mat-chips-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n@mixin mat-chips-theme-color($palette) {\n  @include mat-chips-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n    background: mat-color($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include mat-chips-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include _mat-theme-elevation(3, $theme);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map_get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include mat-chips-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include mat-chips-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include mat-chips-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config) {\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-table-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config) {\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    background-color: fade-out(mat-color($palette), $mat-datepicker-selected-fade-amount);\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-datepicker-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n      background-color: mat-color($background, hover);\n    }\n  }\n\n  .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    // Note: though it's not text, the border is a hint about the fact that this is today's date,\n    // so we use the hint color.\n    border-color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    border-color: fade-out(mat-color($foreground, hint-text), $mat-datepicker-today-fade-amount);\n  }\n\n  @include _mat-datepicker-color(map-get($theme, primary));\n\n  .mat-datepicker-content {\n    @include _mat-theme-elevation(4, $theme);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($theme, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($theme, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include _mat-theme-elevation(0, $theme);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($theme, primary));\n\n    &.mat-accent {\n      color: mat-color(map-get($theme, accent));\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($theme, warn));\n    }\n  }\n}\n\n@mixin mat-datepicker-typography($config) {\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-dialog-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-dialog-container {\n    @include _mat-theme-elevation(24, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config) {\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n\n\n\n\n\n@mixin mat-expansion-panel-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-expansion-panel {\n    @include _mat-theme-overridable-elevation(2, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header {\n    &:not([aria-disabled='true']) {\n      &.cdk-keyboard-focused,\n      &.cdk-program-focused,\n      &:hover {\n        background: mat-color($background, hover);\n      }\n    }\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config) {\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-theme($theme) { }\n\n@mixin mat-grid-list-typography($config) {\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-icon-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config) { }\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function _mat-control-placeholder-color($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary);\n\n    @include input-placeholder {\n      color: _mat-control-placeholder-color($theme);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($theme, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-accent .mat-input-element {\n    caret-color: mat-color($accent);\n  }\n\n  .mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn);\n  }\n}\n\n@mixin mat-input-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-list-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-list-typography($config) {\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-menu-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-menu-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &, &::after {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config) {\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-paginator-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config) {\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config) { }\n\n\n\n\n\n\n@mixin mat-progress-spinner-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config) { }\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map_get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config) {\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-select-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: _mat-control-placeholder-color($theme);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include _mat-theme-overridable-elevation(4, $theme);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n\n\n\n\n\n@mixin mat-sidenav-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // We use invert() here to have the darken the background color expected to be used. If the\n  // background is light, we use a dark backdrop. If the background is dark,\n  // we use a light backdrop.\n  $drawer-backdrop-color: invert(mat-color($background, card, 0.6));\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include _mat-theme-elevation(16, $theme);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    background-color: $drawer-backdrop-color;\n  }\n}\n\n@mixin mat-sidenav-typography($config) { }\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-theme($theme) {\n  $is-dark: map_get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include _mat-theme-elevation(1, $theme);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config) {\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-slider-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-focus-ring-color: mat-color($accent, default, 0.2);\n  $mat-slider-focus-ring-min-value-color: mat-color($foreground, base, 0.12);\n  $mat-slider-tick-color: mat-color($foreground, base, 0.7);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider-focus-ring {\n    background-color: $mat-slider-focus-ring-color;\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      background-color: $mat-slider-focus-ring-min-value-color;\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n  }\n}\n\n@mixin mat-slider-typography($config) {\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-stepper-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config) {\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin mat-sort-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-sort-header-arrow {\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-trasparent color from the theme directly. We convert it into a solid\n    // color by taking the opacity from the rgba value and using the value to determine the\n    // percentage of the background to put into foreground when mixing the colors together.\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n    $text-opacity: opacity($text-color);\n    color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n  }\n}\n\n@mixin mat-sort-typography($config) { }\n\n\n\n\n\n@mixin mat-tabs-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          @include _mat-ink-bar($color, default-contrast);\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Set background color for the tab group\n  .mat-tab-header, .mat-tab-links {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config) {\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config) {\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-theme($theme) {\n  .mat-tooltip {\n    background: mat-color($mat-grey, 700, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config) {\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n\n\n\n\n@mixin mat-snack-bar-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $accent: map-get($theme, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include _mat-theme-elevation(6, $theme);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent));\n  }\n}\n\n@mixin mat-snack-bar-typography($config) {\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config) {}\n\n\n// Theme styles that apply to all appearances of the form-field.\n@mixin mat-form-field-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary);\n  $required-label-color: mat-color($accent);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent);\n  $underline-color-warn: mat-color($warn);\n  $underline-focused-color: mat-color($primary);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-theme($theme);\n  @include mat-form-field-standard-theme($theme);\n  @include mat-form-field-fill-theme($theme);\n  @include mat-form-field-outline-theme($theme);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n\n\n\n\n@mixin mat-tree-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config) {\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config: null) {\n  @if $config == null {\n    $config: mat-typography-config();\n  }\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme) {\n  @include mat-ripple-theme($theme);\n  @include mat-option-theme($theme);\n  @include mat-optgroup-theme($theme);\n  @include mat-pseudo-checkbox-theme($theme);\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$_mat-elevation-prefix}#{$zValue} {\n      @include _mat-theme-elevation($zValue, $theme);\n    }\n  }\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($theme, background);\n    $foreground: map-get($theme, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@mixin mat-divider-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme) {\n  @include mat-core-theme($theme);\n  @include mat-autocomplete-theme($theme);\n  @include mat-badge-theme($theme);\n  @include mat-bottom-sheet-theme($theme);\n  @include mat-button-theme($theme);\n  @include mat-button-toggle-theme($theme);\n  @include mat-card-theme($theme);\n  @include mat-checkbox-theme($theme);\n  @include mat-chips-theme($theme);\n  @include mat-table-theme($theme);\n  @include mat-datepicker-theme($theme);\n  @include mat-dialog-theme($theme);\n  @include mat-divider-theme($theme);\n  @include mat-expansion-panel-theme($theme);\n  @include mat-form-field-theme($theme);\n  @include mat-grid-list-theme($theme);\n  @include mat-icon-theme($theme);\n  @include mat-input-theme($theme);\n  @include mat-list-theme($theme);\n  @include mat-menu-theme($theme);\n  @include mat-paginator-theme($theme);\n  @include mat-progress-bar-theme($theme);\n  @include mat-progress-spinner-theme($theme);\n  @include mat-radio-theme($theme);\n  @include mat-select-theme($theme);\n  @include mat-sidenav-theme($theme);\n  @include mat-slide-toggle-theme($theme);\n  @include mat-slider-theme($theme);\n  @include mat-stepper-theme($theme);\n  @include mat-sort-theme($theme);\n  @include mat-tabs-theme($theme);\n  @include mat-toolbar-theme($theme);\n  @include mat-tooltip-theme($theme);\n  @include mat-tree-theme($theme);\n  @include mat-snack-bar-theme($theme);\n}\n","/* You can add global styles to this file, and also import other style files */\n\n@import '~@angular/material/theming';\n@import './styles/typography';\n@import './app-theme';\n@import './styles/preloader';\n@import './styles/base';\n@import './styles/global';\n\n/* Include material core styles.\n-------------------------------------------------- */\n@include mat-core($custom-typography);\n\n/* Define the light theme.\n-------------------------------------------------- */\n$primary: mat-palette($mat-indigo);\n$accent: mat-palette($mat-pink, A200, A100, A400);\n\n$theme: mat-light-theme($primary, $accent);\n@include angular-material-theme($theme);\n@include custom-components-theme($theme);\n\n/* Used by Home only\n-------------------------------------------------- */\n$alt-primary: mat-palette($mat-yellow);\n$alt-accent: mat-palette($mat-grey, 200);\n$alt-theme: mat-dark-theme($alt-primary, $alt-accent);\n\n.alternative {\n  @include angular-material-theme($alt-theme);\n  //@include custom-components-theme($alt-theme);\n}\n\n/* 3rd party\n-------------------------------------------------- */\n@import '~perfect-scrollbar/css/perfect-scrollbar.css';\n@import '~filepond/dist/filepond.min.css';\n@import '~filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\n","@import '~@angular/material/theming';\n\n// Mixin to create a css class for each fill, stroke, and stop-color for a given color.\n@mixin _svgColorProperties($className, $color) {\n  .docs-svg-#{$className}-fill {\n    fill: $color;\n  }\n\n  .docs-svg-#{$className}-stroke {\n    stroke: $color;\n  }\n\n  .docs-svg-#{$className}-stop-color {\n    stop-color: $color;\n  }\n}\n\n// Mixin to apply theme colors for generated API docs.\n@mixin ngx-site-svg-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  @include _svgColorProperties(primary, mat-color($primary));\n  @include _svgColorProperties(accent, mat-color($accent));\n\n  // Use sass's `lighten` and `darken` to create gradient colors for the docs SVGs.\n  // This is specifically tailored to the SVGs in this app and is not a general approach.\n  $base: mat-color($primary);\n  @include _svgColorProperties(primary-dark-30, scale_color($base, $lightness: -30%));\n  @include _svgColorProperties(primary-dark-40, scale_color($base, $lightness: -40%));\n  @include _svgColorProperties(primary-light-20, scale_color($base, $lightness: +20%));\n  @include _svgColorProperties(primary-light-30, scale_color($base, $lightness: +30%));\n  @include _svgColorProperties(primary-light-40, scale_color($base, $lightness: +40%));\n  @include _svgColorProperties(primary-light-60, scale_color($base, $lightness: +60%));\n  @include _svgColorProperties(primary-light-80, scale_color($base, $lightness: +80%));\n  @include _svgColorProperties(primary-light-85, scale_color($base, $lightness: +85%));\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-footer-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .default-footer {\n    background: mat-color($primary);\n    color: mat-color($primary, default-contrast);\n  }\n\n  ngx-footer {\n    .default-footer-links a {\n      color: mat-color($primary, default-contrast);\n    }\n  }\n}\n","@mixin ngx-landing-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  ngx-landing {\n    .default-header-background {\n      background: mat-color($primary);\n    }\n\n    .default-header-headline {\n      color: mat-color($primary, default-contrast);\n    }\n\n    .default-header-start {\n      color: mat-color($primary);\n    }\n\n    .default-homepage-row {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n}\n","@mixin ngx-header-component-theme($theme) {\n  // retrieve variables from theme\n  // (all possible variables, use only what you really need)\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, accent);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  // all of these variables contain many additional variables\n\n  ngx-home-header {\n    .mat-button {\n      &.active {\n        //color: mat-color($accent, default-contrast);\n        //background-color: mat-color($accent);\n        color: mat-color($accent);\n      }\n      //&:active {\n      //}\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-about-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  ngx-about {\n    .background {\n      color: mat-color($foreground, text);\n      background-color: mat-color($background, background);\n\n      .gradient {\n        &::before {\n          background: linear-gradient(\n            to bottom,\n            mat-color($background, background, 0) 0%,\n            mat-color($background, background, 1) 100%\n          );\n        }\n      }\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-breadcrumbs-component-theme($theme) {\n  $config: mat-typography-config();\n\n  $spacing: 24px;\n  $theme-foreground-map: map-get($theme, foreground);\n  $theme-secondary-text: mat-color($theme-foreground-map, secondary-text);\n  $theme-text: mat-color($theme-foreground-map, text);\n\n  ngx-breadcrumbs {\n    .title {\n      @include mat-typography-level-to-styles($config, title);\n      font-weight: 400;\n    }\n\n    .crumb,\n    .link {\n      color: $theme-secondary-text;\n      text-decoration: none;\n      transition: color $swift-ease-out-duration $swift-ease-out-timing-function;\n      text-transform: uppercase;\n\n      @include mat-typography-level-to-styles($config, caption);\n\n      &:hover {\n        color: $theme-text;\n      }\n    }\n\n    .link {\n      cursor: pointer;\n    }\n\n    .chevron {\n      font-size: 18px;\n      height: 18px;\n      width: 18px;\n      margin-left: $spacing/4;\n      margin-right: $spacing/4;\n    }\n\n    .crumb.current,\n    .crumb.current .link {\n      color: $theme-text;\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-toolbar-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  ngx-toolbar {\n    .mat-toolbar {\n      color: rgba(0, 0, 0, 0.87);\n      background-color: #ffffff;\n      //color: mat-color($foreground, text);\n      //background-color: mat-color($background, background, 0.6);\n    }\n\n    .mat-nav-list {\n      .mat-list-item {\n        color: rgba(0, 0, 0, 0.87);\n      }\n    }\n  }\n}\n","@import 'var';\n@import '~@angular/material/theming';\n\n@mixin ngx-sidenav-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  ngx-sidenav {\n    .sidenav {\n      background: $background-color__sidenav-list;\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-chat-box-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  ngx-chat-box {\n    .chat-input {\n      color: mat-color($foreground, text);\n      background-color: mat-color($background, background);\n      //background-color: mat-color($background, background, 0.6);\n    }\n\n    //.chat-input {\n    //\n    //  &:hover, &:active, &:focus {\n    //    background-color: mat-color($background, hover);\n    //  }\n    //\n    //  &.selected {\n    //    background-color: mat-color($primary, lighter, 0.5);\n    //    color: mat-color($foreground, text);\n    //  }\n    //}\n  }\n}\n","@import 'var';\n@import '~@angular/material/theming';\n\n@mixin ngx-accounts-grid-list-component-theme($app-theme) {\n  $primary: map-get($app-theme, primary);\n  $accent: map-get($app-theme, accent);\n\n  ngx-accounts-grid-list {\n    //.mat-toolbar {\n    //  background-color: $background-color__sidenav-list ;\n    //  color: mat-color($primary, default-contrast);\n    //}\n\n    .mat-button-toggle {\n      background-color: lighten($background-color__sidenav-list, 20);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-button-toggle-checked {\n      background-color: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-global-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $foreground: map-get($theme, foreground);\n\n  code {\n    color: mat-color($accent, lighter-contrast);\n    background-color: mat-color($accent, lighter);\n  }\n}\n"],"sourceRoot":""}